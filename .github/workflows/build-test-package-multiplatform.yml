name: CMake on multiple platforms

on:
  push:
    branches: [ "main" ]
    # Only trigger if the commit message does NOT contain "[skip ci]"
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
  pull_request:
    branches: [ "main" ]
    # Only trigger if the pull request does NOT contain "[skip ci]"
    if: "!contains(github.event.pull_request.title, '[skip ci]')"

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl

    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Check for version.txt
      id: version
      run: |
        if [ ! -f version.txt ]; then
          echo "0.0.0" > version.txt
        fi
        VERSION=$(cat version.txt)
        echo "Current version: $VERSION"
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Increment Version
      id: increment_version
      run: |
        IFS='.' read -r major minor patch <<< "$VERSION"
        patch=$((patch + 1))
        NEW_VERSION="$major.$minor.$patch"
        echo "$NEW_VERSION" > version.txt
        echo "New version: $NEW_VERSION"
        echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

    - name: Commit Updated Version
      run: |
        git config user.name "GitHub Action"
        git config user.email "action@github.com"
        git add version.txt
        git commit -m "Increment version to ${NEW_VERSION} [skip ci]" || echo "No changes to commit"
        git push origin main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }}

    - name: Package
      run: |
        # Create a package directory
        mkdir -p ${GITHUB_WORKSPACE}/package
        # Move the built files to the package directory (adjust as necessary)
        cp -r ${GITHUB_WORKSPACE}/build/bin/* ${GITHUB_WORKSPACE}/package/
        # Create a zip archive of the package
        cd ${GITHUB_WORKSPACE}/package
        zip -r "release v${NEW_VERSION}.zip" .

    - name: Upload Package
      uses: actions/upload-artifact@v3
      with:
        name: package
        path: ${GITHUB_WORKSPACE}/package/release v${NEW_VERSION}.zip
